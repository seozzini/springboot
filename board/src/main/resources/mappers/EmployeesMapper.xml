<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.insa.mapper.EmployeesMapper">

<!-- getList : 전체조회 -->
<select id="getList">
SELECT  /*+ INDEX_DESC(employees EMP_EMP_ID_PK) */
            employee_id,
	        first_name,
	        last_name,
	        email,
	        phone_number,
	        hire_date,
	        job_id,
	        salary,
	        commission_pct,
	        manager_id,
	        department_id
FROM employees
ORDER BY employee_id DESC
</select>


<!-- insert: 등록 -->
<insert id="insert" parameterType="employeesDTO">
  INSERT INTO employees (
							employee_id,
					        first_name,
					        last_name,
					        email,
					        phone_number,
					        hire_date,
					        job_id
                        )
       VALUES (
				EMPLOYEES_SEQ.nextval,
		        #{firstName},
		        #{lastName},
		        #{email},
		        #{phoneNumber},
		        NVL(#{hireDate}, sysdate),
		        #{jobId}
               )
</insert>

<!-- 단건조회 -->
<select id="getOne" parameterType="Long" resultType="employeesDTO">
SELECT employee_id,
        first_name,
        last_name,
        email,
        phone_number,
        hire_date,
        job_id,
        salary,
        commission_pct,
        manager_id,
        department_id
FROM employees
WHERE employee_id = #{employeeId}
</select>

<!-- update: 수정 -->
<update id="update" parameterType="employeesDTO">
  UPDATE employees
     SET 
         email = #{email},
         phone_number = #{phoneNumber},
         salary = #{salary},
         commission_pct = #{commissionPct},
         manager_id = #{managerId},
         department_id = #{departmentId},
   WHERE employee_id = #{employeeId}
</update>

<select id="getJobList" resultType="JobsDTO">
	SELECT job_id,
	       job_title,
	       min_salary,
	       max_salary
    FROM jobs
</select>

<!-- 삭제 delete -->
<delete id="delete" parameterType="Long">
	DELETE FROM
	employees
	WHERE employee_id = #{employeeId}
</delete>


<!-- <select id="getList">
SELECT ROWNUM RN, employee_id, first_name, last_name, email,
       phone_number,hire_date, job_id, salary,commission_pct,
	   manager_id,department_id
FROM(
	SELECT  employee_id,
	        first_name,
	        last_name,
	        email,
	        phone_number,
	        hire_date,
	        job_id,
	        salary,
	        commission_pct,
	        manager_id,
	        department_id
	FROM employees
	 <![CDATA[
	 WHERE ROWNUM <= #{end}
	 ]]>

	  <include refid="criteria"></include>
	
) WHERE RN >= #{start}
</select> -->

</mapper>